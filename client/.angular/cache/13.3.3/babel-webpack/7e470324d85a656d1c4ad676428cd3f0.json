{"ast":null,"code":"import { HttpClient } from \"@angular/common/http\"; // tslint:disable-next-line:ordered-imports\n\nimport { of, Subject } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CommunicationService = /*#__PURE__*/(() => {\n  class CommunicationService {\n    constructor(http) {\n      this.http = http;\n      this.BASE_URL = \"http://localhost:3000/database\";\n      this._listners = new Subject();\n    }\n\n    listen() {\n      return this._listners.asObservable();\n    }\n\n    filter(filterBy) {\n      this._listners.next(filterBy);\n    }\n\n    getParcelles(jardinId) {\n      return this.http.get(this.BASE_URL + `/parcelles?jardinId=${jardinId}`).pipe(catchError(this.handleError(\"getParcelles\")));\n    }\n\n    getRangs(jardinId, coordonnees) {\n      return this.http.get(this.BASE_URL + `/parcelles/${jardinId}/${coordonnees}`).pipe(catchError(this.handleError(\"getRangs\")));\n    }\n\n    getVarieteByRang(jardinId, coordonnees, numero) {\n      return this.http.get(this.BASE_URL + `/varietes/${jardinId}/${coordonnees}/${numero}`).pipe(catchError(this.handleError(\"getVarieteByRang\")));\n    }\n\n    getJardins() {\n      return this.http.get(this.BASE_URL + \"/jardins\").pipe(catchError(this.handleError(\"getJardins\")));\n    }\n\n    getVarietes() {\n      return this.http.get(this.BASE_URL + \"/variete\").pipe(catchError(this.handleError(\"getVariete\")));\n    }\n\n    getVariete(nomVariete) {\n      return this.http.get(this.BASE_URL + `/variete/:${nomVariete}`).pipe(catchError(this.handleError(\"getVariete\")));\n    }\n\n    getHotels() {\n      return this.http.get(this.BASE_URL + \"/hotels\").pipe(catchError(this.handleError(\"getHotels\")));\n    }\n\n    insertHotel(hotel) {\n      return this.http.post(this.BASE_URL + \"/hotels/insert\", hotel).pipe(catchError(this.handleError(\"insertHotel\")));\n    }\n\n    insertVariete(variete) {\n      return this.http.post(this.BASE_URL + \"/variete/insert\", variete).pipe(catchError(this.handleError(\"insertVariet\")));\n    }\n\n    updateHotel(hotel) {\n      return this.http.put(this.BASE_URL + \"/hotels/update\", hotel).pipe(catchError(this.handleError(\"updateHotel\")));\n    }\n\n    deleteHotel(hotelNb) {\n      return this.http.post(this.BASE_URL + \"/hotels/delete/\" + hotelNb, {}).pipe(catchError(this.handleError(\"deleteHotel\")));\n    }\n\n    deleteVariete(nomVariete) {\n      return this.http.post(this.BASE_URL + \"/variete/delete/\" + nomVariete, {}).pipe(catchError(this.handleError(\"deleteVariete\")));\n    }\n\n    getHotelPKs() {\n      return this.http.get(this.BASE_URL + \"/hotels/hotelNb\").pipe(catchError(this.handleError(\"getHotelPKs\")));\n    }\n\n    getRooms(hotelNb) {\n      return this.http.get(this.BASE_URL + `/rooms?hotelNb=${hotelNb}`).pipe(catchError(this.handleError(\"getRooms\")));\n    }\n\n    insertRoom(room) {\n      return this.http.post(this.BASE_URL + \"/rooms/insert\", room).pipe(catchError(this.handleError(\"inserHotel\")));\n    }\n\n    updateRoom(room) {\n      return this.http.put(this.BASE_URL + \"/rooms/update\", room).pipe(catchError(this.handleError(\"updateRoom\")));\n    }\n\n    deleteRoom(hotelNb, roomNb) {\n      return this.http.post(this.BASE_URL + `/rooms/delete/${hotelNb}/${roomNb}`, {}).pipe(catchError(this.handleError(\"deleteRoom\")));\n    }\n\n    getGuests(hotelNb, roomNb) {\n      return this.http.get(this.BASE_URL + `/guests/${hotelNb}/${roomNb}`).pipe(catchError(this.handleError(\"getGuests\")));\n    }\n\n    handleError(request, result) {\n      return error => {\n        return of(result);\n      };\n    }\n\n  }\n\n  CommunicationService.ɵfac = function CommunicationService_Factory(t) {\n    return new (t || CommunicationService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CommunicationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CommunicationService,\n    factory: CommunicationService.ɵfac\n  });\n  return CommunicationService;\n})();","map":null,"metadata":{},"sourceType":"module"}